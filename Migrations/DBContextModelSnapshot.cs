// <auto-generated />
using System;
using BookingService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingService.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BookingService.Models.GuestJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LineId")
                        .UseIdentityColumn();

                    b.Property<int?>("HousePostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HousePostId");

                    b.HasIndex("UserId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("BookingService.Models.HousePost", b =>
                {
                    b.Property<int>("HousePostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HousePostId");

                    b.HasIndex("UserId");

                    b.ToTable("HousePosts");
                });

            modelBuilder.Entity("BookingService.Models.PhotoBank", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HousePostId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("HousePostId");

                    b.ToTable("PhotoBanks");
                });

            modelBuilder.Entity("BookingService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .UseIdentityColumn();

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookingService.Models.GuestJournal", b =>
                {
                    b.HasOne("BookingService.Models.HousePost", "HousePost")
                        .WithMany()
                        .HasForeignKey("HousePostId");

                    b.HasOne("BookingService.Models.User", "LodgerId")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("HousePost");

                    b.Navigation("LodgerId");
                });

            modelBuilder.Entity("BookingService.Models.HousePost", b =>
                {
                    b.HasOne("BookingService.Models.User", "User")
                        .WithMany("HousePosts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingService.Models.PhotoBank", b =>
                {
                    b.HasOne("BookingService.Models.HousePost", "HousePost")
                        .WithMany("PhotoBanks")
                        .HasForeignKey("HousePostId");

                    b.Navigation("HousePost");
                });

            modelBuilder.Entity("BookingService.Models.HousePost", b =>
                {
                    b.Navigation("PhotoBanks");
                });

            modelBuilder.Entity("BookingService.Models.User", b =>
                {
                    b.Navigation("HousePosts");
                });
#pragma warning restore 612, 618
        }
    }
}
